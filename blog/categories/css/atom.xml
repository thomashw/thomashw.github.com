<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: css | thomashw]]></title>
  <link href="http://thomashw.github.com/blog/categories/css/atom.xml" rel="self"/>
  <link href="http://thomashw.github.com/"/>
  <updated>2013-11-03T11:38:51-07:00</updated>
  <id>http://thomashw.github.com/</id>
  <author>
    <name><![CDATA[Thomas Hewton-Waters]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Styling a horizontal rule]]></title>
    <link href="http://thomashw.github.com/blog/2013/07/22/styling-a-horizontal-rule/"/>
    <updated>2013-07-22T10:54:00-06:00</updated>
    <id>http://thomashw.github.com/blog/2013/07/22/styling-a-horizontal-rule</id>
    <content type="html"><![CDATA[<p>Up until recently I didn&rsquo;t realize you could style horizontal rules (<code>&lt;hr /&gt;</code>). Of course you could use a div to do the same thing, but using a horizontal rule for its intended use is nice (and easier than using a div).</p>

<p>Here&rsquo;s the CSS I used most recently on a website I&rsquo;m making to customize the horizontal rule.</p>

<pre><code>hr {
    width: 90%;
    border: 0;
    height: 1px;
    background: #000;
    opacity: 0.2;
}
</code></pre>

<p>Of course you can also name the style and apply it to the horizontal rule.</p>

<pre><code>// CSS
hr.custom {
    width: 90%;
    border: 0;
    height: 1px;
    background: #000;
    opacity: 0.2;
}

// HTML
&lt;hr class="custom" /&gt;
</code></pre>

<p>You can also do things like gradients, blurs, etc.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rounded corner text inputs]]></title>
    <link href="http://thomashw.github.com/blog/2013/07/20/rounded-corner-text-inputs/"/>
    <updated>2013-07-20T12:02:00-06:00</updated>
    <id>http://thomashw.github.com/blog/2013/07/20/rounded-corner-text-inputs</id>
    <content type="html"><![CDATA[<p>The easiest way to create a custom text input on a form is to remove the default border of the input and place a custom image behind it as its background.</p>

<p>Here&rsquo;s the background I&rsquo;m using:</p>

<p align="center">
  <img src="images/search_bg.png" />
</p>


<p>Here&rsquo;s the HTML.</p>

<pre><code>&lt;div id="search"&gt;
  &lt;form method="POST" action="#" accept-charset="UTF-8"&gt;
    &lt;input class="search" type="text"&gt;      
  &lt;/form&gt;
&lt;/div&gt;
</code></pre>

<p>And the CSS.</p>

<pre><code>#search {
    width: 362px;
    height: 41px;
    background: url('/images/search_bg.png') no-repeat left top;
    line-height: 41px;
    margin: 10px auto 10px auto;
    text-align: center;
}

.search {
    border: none;
    text-align: center;
    outline-width: 0;
}
</code></pre>

<p>The <code>line-height</code> property sets the line-height to the same height as the div height. This has the effect of vertically centering the input (and hence the text) in the div.</p>

<p>The <code>border</code> property is the one that makes the default text input&rsquo;s background invisible, and then we set the background of the containing div to the image we created with the <code>background</code> property.</p>

<p>The <code>margin</code> property is used to add a 10px margin to the top and bottom of the div. The <code>auto</code> attributes are used to center the div (and hence the input) in the middle of the page.</p>
]]></content>
  </entry>
  
</feed>
